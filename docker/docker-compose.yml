services:

  chronicler:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: chronicler
    network_mode: "host"
    command: ["python", "application/custodian_archetypes/chronicler/main.py"]
    env_file:
      - ../.env
    volumes:
      - ..:/app
    depends_on:
      - redis
      - celery_worker_chr
      - ngrok
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  sage:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: sage
    network_mode: "host"
    command: ["python", "application/custodian_archetypes/sage/main.py"]
    env_file:
      - ../.env
    volumes:
      - ..:/app
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery_worker_chr:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery_worker_chr
    network_mode: "host"
    command: ["celery", "-A", "application.dispatcher.celery_app_chr", "worker", "--loglevel=info", "-Q", "chronicle_save,transcribe_audio,process_text", "--concurrency", "1"]
    env_file:
      - ../.env
    volumes:
      - ..:/app
    depends_on:
      - redis
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7
    container_name: redis
    network_mode: "host"
    ports:
      - "6379:6379"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - ../.data/qdrant:/qdrant/storage
    restart: always
    network_mode: "host"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    network_mode: "host"
    env_file:
        - ../.env
    command: ["http", "127.0.0.1:8443"]
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

